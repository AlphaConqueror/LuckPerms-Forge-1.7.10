buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }

    dependencies {
        classpath 'org.spongepowered:mixingradle:0.4-SNAPSHOT'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java-library'
}

apply plugin: 'forge'

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "${minecraftVersion}-${forgeVersion}"
    mappings = "stable_12"
}

repositories {
    mavenCentral()

    maven {
        url 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    implementation project(':api')
    implementation project(':common:loader-utils')
    implementation project(':forge:forge-api')

    implementation("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
    }
}

ext.mixinSrg = new File(project.buildDir, "resources/main/stoneluckperms.mixins.json")
ext.mixinRefMap = new File(project.buildDir, "resources/main/stoneluckperms.refmap.json")

build {
    dependsOn(":forge:build")
    dependsOn(":forge:forge-api:build")
}

jar {
    manifest {
        attributes(
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Implementation-Title': 'LuckPerms',
                'Implementation-Vendor': 'LuckPerms',
                'Implementation-Version': project.ext.fullVersion,
                'Specification-Title': 'luckperms',
                'Specification-Vendor': 'LuckPerms',
                'Specification-Version': '1'
        )
    }
}

processResources {
    filesMatching('mcmod.info') {
        expand 'version': project.ext.fullVersion
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path', "-AreobfSrgFile=${tasks.reobf.srg}"]
    options.deprecation = true
    options.encoding = 'utf8'
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    options.compilerArgs += [
            '-Xlint:all',
            '-Xlint:-path',
            '-Xlint:-processing',
            "-AreobfSrgFile=${project.file('build/srgs/mcp-srg.srg').getCanonicalPath()}"
    ]

    if (project.mixinSrg.exists()) {
        options.compilerArgs += "-AoutSrgFile=${project.mixinSrg.getCanonicalPath()}"
    }

    if (project.mixinRefMap.exists()) {
        options.compilerArgs += "-AoutRefMapFile=${project.mixinRefMap.getCanonicalPath()}"
    }

    options.deprecation = true
    options.encoding = 'UTF-8'
}

shadowJar {
    archiveFileName = "LuckPerms-Forge-${project.ext.fullVersion}.jar"

    from {
        project(':forge').tasks.shadowJar.archiveFile
    }

    dependencies {
        include(dependency('net.luckperms:.*'))
        include(dependency('me.lucko.luckperms:.*'))
    }
}

reobf {
    if (mixinSrg.exists()) {
        addExtraSrgFile mixinSrg
    }

    reobf(shadowJar.archivePath) {
        spec -> spec.classpath = configurations.compileClasspath
    }
}

task copySrgs(type: Copy, dependsOn: "genSrgs") {
    // using some FG hacks here
    from plugins.getPlugin("forge").delayedFile("{SRG_DIR}")
    include '**/*.srg'
    into 'build/srgs'
}

setupDecompWorkspace.dependsOn copySrgs
setupDevWorkspace.dependsOn copySrgs
compileJava.dependsOn copySrgs
reobf.dependsOn shadowJar
